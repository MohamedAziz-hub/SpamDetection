# download_real_datasets.py
import pandas as pd
import urllib.request
import zipfile
import os


def download_real_datasets():
    print("üì• T√âL√âCHARGEMENT DE VRAIS DATASETS...")

    # Cr√©er les dossiers
    os.makedirs('data/english', exist_ok=True)
    os.makedirs('data/french', exist_ok=True)
    os.makedirs('data/mixed', exist_ok=True)

    # ========== DATASET ANGLAIS R√âEL ==========
    print("üî§ T√©l√©chargement dataset anglais...")

    # Dataset SMS Spam Collection (r√©el)
    try:
        url = "https://archive.ics.uci.edu/ml/machine-learning-databases/00228/smsspamcollection.zip"
        filename = "data/smsspamcollection.zip"

        urllib.request.urlretrieve(url, filename)

        # Extraire
        with zipfile.ZipFile(filename, 'r') as zip_ref:
            zip_ref.extractall('data/english/')

        # Lire et formater
        df_english = pd.read_csv('data/english/SMSSpamCollection', sep='\t', names=['label', 'message'])
        df_english['language'] = 'en'

        print(f"‚úÖ Dataset anglais: {len(df_english)} messages")

    except Exception as e:
        print(f"‚ùå Erreur t√©l√©chargement anglais: {e}")
        print("üîÑ Cr√©ation dataset anglais manuel...")
        df_english = create_manual_english_dataset()

    # ========== DATASET FRAN√áAIS R√âEL ==========
    print("\nüî§ T√©l√©chargement dataset fran√ßais...")

    # Cr√©er un dataset fran√ßais manuellement plus grand
    df_french = create_large_french_dataset()

    # ========== COMBINER ET SAUVEGARDER ==========
    print("\nüîÑ COMBINAISON DES DATASETS...")

    # Combiner
    df_mixed = pd.concat([df_english, df_french], ignore_index=True)

    # M√©langer al√©atoirement
    df_mixed = df_mixed.sample(frac=1, random_state=42).reset_index(drop=True)

    # Sauvegarder
    df_english.to_csv('data/english/english_spam_data.csv', index=False)
    df_french.to_csv('data/french/french_spam_data.csv', index=False)
    df_mixed.to_csv('data/mixed/bilingual_dataset.csv', index=False)

    print("‚úÖ DATASETS CR√â√âS AVEC SUCC√àS!")
    print(f"üìä STATISTIQUES FINALES:")
    print(f"   ‚Ä¢ Dataset anglais: {len(df_english)} messages")
    print(f"   ‚Ä¢ Dataset fran√ßais: {len(df_french)} messages")
    print(f"   ‚Ä¢ Dataset mixte: {len(df_mixed)} messages")
    print(f"   ‚Ä¢ Total spams: {len(df_mixed[df_mixed['label'] == 'spam'])}")
    print(f"   ‚Ä¢ Total ham: {len(df_mixed[df_mixed['label'] == 'ham'])}")

    return df_english, df_french, df_mixed


def create_large_french_dataset():
    """Cr√©e un large dataset fran√ßais avec plus de vari√©t√©"""

    french_messages = []
    french_labels = []

    # ========== SPAMS FRAN√áAIS (100 exemples) ==========
    spam_templates = [
        "F√©licitations ! Vous avez gagn√© {montant} √† notre {loterie} ! Cliquez sur {lien}",
        "Pr√™t {urgence} disponible sans frais. Obtenez {montant} imm√©diatement.",
        "Perdez {poids} en {temps} sans effort avec notre produit {qualificatif}.",
        "URGENT: Votre {compte} a √©t√© suspendu. V√©rifiez maintenant sur {lien}",
        "Travail √† domicile: Gagnez {salaire} par mois sans {experience}.",
        "{produit} gratuit ! Payez seulement {frais} de frais de port.",
        "Investissement {crypto}: {multiplicateur} votre argent en {delai} garantie !",
        "Vous √™tes s√©lectionn√© pour un {voyage} gratuit √† {destination} !",
        "{medicament} secret que les {professionnels} cachent au public.",
        "Cr√©dit {urgence} sans justification. Appelez {numero} !",
        "Alerte s√©curit√©: Votre {compte} a √©t√© compromis. Cliquez {lien}.",
        "Gagnez argent {facilement} depuis votre {endroit}. D√©marrage {rapidite}.",
        "Dipl√¥me {niveau} sans {examen}. Obtenez-le {delai}.",
        "Produit {anti_age}: Effacez {annees} en {jours} seulement.",
        "Visa {pays} gratuit. Postulez {urgence} avant fermeture.",
    ]

    spam_variations = {
        'montant': ['1 000 000 ‚Ç¨', '500 000 ‚Ç¨', '100 000 ‚Ç¨', '50 000 ‚Ç¨', '10 000 ‚Ç¨', '5 000 ‚Ç¨'],
        'loterie': ['loterie internationale', 'grande loterie', 'loterie nationale', 'tirage au sort'],
        'lien': ['www.claim-price.com', 'www.gagnant.net', 'www.reclamation.fr', 'www.prix-garanti.com'],
        'urgence': ['urgent', 'imm√©diat', 'rapide', 'express'],
        'poids': ['10 kg', '15 kg', '20 kg', '5 kg', '8 kg'],
        'temps': ['2 semaines', '1 mois', '15 jours', '3 semaines'],
        'qualificatif': ['miracle', 'r√©volutionnaire', 'exceptionnel', 'incroyable'],
        'compte': ['compte bancaire', 'compte email', 'compte en ligne', 'profil'],
        'salaire': ['5 000 ‚Ç¨', '3 000 ‚Ç¨', '7 000 ‚Ç¨', '10 000 ‚Ç¨'],
        'experience': ['exp√©rience', 'dipl√¥me', 'formation', 'comp√©tence'],
        'produit': ['iPhone', 'Samsung', 'iPad', 'MacBook', 'TV 4K'],
        'frais': ['10 ‚Ç¨', '15 ‚Ç¨', '20 ‚Ç¨', '5 ‚Ç¨'],
        'crypto': ['crypto', 'bitcoin', 'ethereum', 'blockchain'],
        'multiplicateur': ['Doublez', 'Triplez', 'Multipliez par 5', 'Augmentez de 300%'],
        'delai': ['24h', '48h', '1 semaine', '15 jours'],
        'voyage': ['voyage', 's√©jour', 'vacances', 'croisi√®re'],
        'destination': ['Maldives', 'Bali', 'Tha√Ølande', 'Cara√Øbes', 'Dubai'],
        'medicament': ['M√©dicament', 'Rem√®de', 'Traitement', 'Solution'],
        'professionnels': ['m√©decins', 'pharmaciens', 'sp√©cialistes', 'experts'],
        'numero': ['le 08 00 00 00 00', 'ce num√©ro', 'vite', 'maintenant'],
        'facilement': ['facilement', 'simplement', 'rapidement', 'sans effort'],
        'endroit': ['canap√©', 'maison', 'bureau', 'jardin'],
        'rapidite': ['imm√©diat', 'rapide', 'instantan√©', 'd√®s maintenant'],
        'niveau': ['universitaire', 'master', 'doctorat', 'licence'],
        'examen': ['examen', 'test', 'contr√¥le', '√©valuation'],
        'anti_age': ['anti-√¢ge', 'rajeunissant', 'reg√©n√©rant', 'revitalisant'],
        'annees': ['10 ans', '15 ans', '20 ans', '5 ans'],
        'jours': ['15 jours', '1 mois', '3 semaines', '10 jours'],
        'pays': ['Canada', 'USA', 'Australie', 'Japon', 'Europe'],
    }

    # G√©n√©rer 100 spams vari√©s
    for i in range(100):
        template = spam_templates[i % len(spam_templates)]
        message = template
        for key, values in spam_variations.items():
            if f"{{{key}}}" in message:
                message = message.replace(f"{{{key}}}", values[i % len(values)])
        french_messages.append(message)
        french_labels.append('spam')

    # ========== MESSAGES NORMAUX FRAN√áAIS (100 exemples) ==========
    normal_templates = [
        "Bonjour {prenom}, comment allez-vous {moment} ?",
        "Merci pour votre {message}, je vous r√©ponds {delai}.",
        "Pouvez-vous m'appeler quand vous √™tes {disponible} ?",
        "La r√©union est pr√©vue pour {jour} √† {heure}.",
        "Je serai en retard pour le {evenement} {moment}.",
        "Joyeux anniversaire ! Passez une {qualite} journ√©e.",
        "Veuillez trouver ci-joint le {document} demand√©.",
        "Salut, on se voit {jour} pour le {activite} ?",
        "Le {projet} sera pr√™t pour {delai}.",
        "Merci de votre {attitude}. {formule}.",
        "Peux-tu m'envoyer le {fichier} quand tu as un moment ?",
        "La r√©union de {jour} est {statut}.",
        "As-tu re√ßu mon {message} d'{hier} ?",
        "On se retrouve o√π pour le {activite} {moment} ?",
        "N'oublie pas d'acheter le {produit} en rentrant.",
    ]

    normal_variations = {
        'prenom': ['Jean', 'Marie', 'Pierre', 'Sophie', 'Paul', 'Julie'],
        'moment': ['aujourd\'hui', 'ce matin', 'cet apr√®s-midi', 'ce soir'],
        'message': ['email', 'message', 'courrier', 'appel'],
        'delai': ['bient√¥t', 'd√®s que possible', 'dans la journ√©e', 'demain'],
        'disponible': ['disponible', 'libre', 'pr√™t', 'convenable'],
        'jour': ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],
        'heure': ['14h00', '15h30', '10h00', '16h45', '9h15'],
        'evenement': ['d√Æner', 'd√©jeuner', 'rendez-vous', 'r√©union', 'cin√©ma'],
        'qualite': ['bonne', 'excellente', 'agr√©able', 'merveilleuse'],
        'document': ['document', 'fichier', 'rapport', 'dossier'],
        'activite': ['d√©jeuner', 'd√Æner', 'cin√©ma', 'caf√©', 'shopping'],
        'projet': ['rapport', 'projet', 'dossier', 'document', 'fichier'],
        'attitude': ['compr√©hension', 'patience', 'collaboration', 'aide'],
        'formule': ['Cordialement', 'Bien √† vous', 'Sinc√®rement', 'Amicalement'],
        'fichier': ['fichier', 'document', 'rapport', 'dossier', 'photo'],
        'statut': ['annul√©e', 'report√©e', 'confirm√©e', 'modifi√©e'],
        'hier': ['hier', 'la semaine derni√®re', 'ce matin', 'tout √† l\'heure'],
        'produit': ['pain', 'lait', 'journal', 'caf√©', 'sucre'],
    }

    # G√©n√©rer 100 messages normaux vari√©s
    for i in range(100):
        template = normal_templates[i % len(normal_templates)]
        message = template
        for key, values in normal_variations.items():
            if f"{{{key}}}" in message:
                message = message.replace(f"{{{key}}}", values[i % len(values)])
        french_messages.append(message)
        french_labels.append('ham')

    # Cr√©er le dataframe fran√ßais
    df_french = pd.DataFrame({
        'message': french_messages,
        'label': french_labels,
        'language': ['fr'] * 200
    })

    print(f"‚úÖ Dataset fran√ßais cr√©√©: {len(df_french)} messages")
    return df_french


def create_manual_english_dataset():
    """Cr√©e un dataset anglais si le t√©l√©chargement √©choue"""
    print("üîÑ Cr√©ation dataset anglais manuel...")

    english_data = {
        'message': [
            # SPAMS (50 exemples)
            "Free entry in 2 a wkly comp to win FA Cup final tkts",
            "You have won a $1000 prize! Call now to claim.",
            "Urgent: Your account has been compromised.",
            "Work from home and earn $5000 monthly.",
            "Congratulations! You won an iPhone. Click to claim.",
            "Lose weight fast with this miracle pill.",
            "Double your money in 24 hours guaranteed.",
            "Free vacation to Bahamas! Limited time offer.",
            "Your bank account needs verification immediately.",
            "Investment opportunity: 300% return guaranteed.",
            "You are selected for a free cruise vacation.",
            "Limited offer: Get your free laptop now!",
            "Urgent message: Your package delivery failed.",
            "Exclusive deal: 90% off all products today!",
            "Warning: Your computer may be infected.",
            "Get paid $100 per survey from home.",
            "Your tax refund is waiting. Claim now!",
            "Special discount for valued customers.",
            "Your Netflix account has been suspended.",
            "Win a brand new car! Enter now!",

            # HAM (50 exemples)
            "Hey, how are you doing today?",
            "Thanks for your email, I'll reply soon.",
            "Can you call me when you're available?",
            "The meeting is scheduled for tomorrow at 2 PM.",
            "I'll be late for dinner tonight.",
            "Happy birthday! Have a great day.",
            "Please find attached the requested document.",
            "Hi, are we meeting for lunch on Saturday?",
            "The report will be ready by end of week.",
            "Thanks for your understanding. Best regards.",
            "Can you send me the file when you have a moment?",
            "Monday's meeting is cancelled.",
            "Did you receive my message from yesterday?",
            "Where should we meet for the cinema tonight?",
            "Don't forget to buy bread on your way home.",
            "The doctor confirmed the appointment for Friday.",
            "I booked the room for the conference.",
            "The kids come back from school at 4:30 PM.",
            "Do you want to go to the restaurant this weekend?",
            "The project is going well, thanks for your help.",
        ],
        'label': ['spam'] * 20 + ['ham'] * 20,
        'language': ['en'] * 40
    }

    return pd.DataFrame(english_data)


if __name__ == "__main__":
    download_real_datasets()